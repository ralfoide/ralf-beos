
#define NB_CHAR 26
#define LX 5
#define LY 5
static const char alphabet[NB_CHAR*LX*LY+1] =
".###."		// A
"#...#"
"#####"
"#...#"
"#...#"

"####."		// B
"#...#"
"####."
"#...#"
"####."

".####"		// C
"#...."
"#...."
"#...."
".####"

"####."		// D
"#...#"
"#...#"
"#...#"
"####."

"#####"		// E
"#...."
"####."
"#...."
"#####"

"#####"		// F
"#...."
"####."
"#...."
"#...."

".###."		// G
"#...."
"#..##"
"#...#"
".###."

"#...#"		// H
"#...#"
"#####"
"#...#"
"#...#"

".###."		// I
"..#.."
"..#.."
"..#.."
".###."

"....#"		// J
"....#"
"....#"
"#...#"
".###."

"#...#"		// K
"#.##."
"##..."
"#.##."
"#...#"

"#...."		// L
"#...."
"#...."
"#...."
"#####"

"#...#"		// M
"##.##"
"#.#.#"
"#...#"
"#...#"

"#...#"		// N
"##..#"
"#.#.#"
"#..##"
"#...#"

".###."		// O
"#...#"
"#...#"
"#...#"
".###."

"####."		// P
"#...#"
"####."
"#...."
"#...."

".###."		// Q
"#...#"
"#.#.#"
"#..#."
".##.#"

"####."		// R
"#...#"
"####."
"#..#."
"#...#"

".####"		// S
"#...."
".###."
"....#"
"####."

"#####"		// T
"..#.."
"..#.."
"..#.."
"..#.."

"#...#"		// U
"#...#"
"#...#"
"#...#"
".###."

"#...#"		// V
"#...#"
"#...#"
".#.#."
"..#.."

"#...#"		// W
"#...#"
"#.#.#"
"##.##"
"#...#"

"#...#"		// X
".#.#."
"..#.."
".#.#."
"#...#"

"#...#"		// Y
"#...#"
".###."
"..#.."
"..#.."

"#####"		// Z
"...#."
"..#.."
".#..."
"#####"
;


