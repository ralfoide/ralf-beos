// trash icon from the Tracker
// Be Inc.
// Extracted by R'alf,0x 28/7/97


#ifndef _H_PTRASH
#define _H_PTRASH


#define K_TRASH_SX 28
#define K_TRASH_SY 34

#define M_MAKE_TRASH_BITMAP(x)										\
	x = new BBitmap(BRect(0,0,K_TRASH_SX-1,K_TRASH_SY-1),B_COLOR_8_BIT);	\
	if (x) x -> SetBits(g_trash_bits, K_TRASH_SY * x -> BytesPerRow(), 0, B_COLOR_8_BIT)


unsigned char g_trash_bits[] = {
 0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x00,0x00,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x02,0x08,0x0f,0x11,0x00,0x00,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x00,0x00,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x0f,0x0f,0x00,0x00,0xae,0xae,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x00,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x0f,0x0f,0x0e,0x0f,0x00,0x00,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x00,0x00,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x0f,0x0f,0x0e,0x0f,0x0f,0x0f,0x00,0x00,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x0f,0x0f,0x0e,0x0f,0x0f,0x0f,0x0f,0x0f,0x00,0x00,0xae
,0xae,0xae,0xae,0xae,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x0f,0x0f,0x0e,0x0f,0x0f,0x0f,0x0f,0x17,0x0f,0x00,0xae
,0xae,0xae,0xae,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x0f,0x0f,0x0e,0x0f,0x0f,0x0f,0x17,0x0f,0x05,0x00,0xae
,0xae,0xae,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x0f,0x0f,0x0e,0x0f,0x0f,0x18,0x0e,0x05,0x00,0xae,0xae
,0xae,0x00,0x17,0x17,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x09,0x0f,0x11,0x0f,0x0f,0x0e,0x0f,0x0f,0x0f,0x17,0x0f,0x05,0x04,0x00,0xae,0xae
,0xae,0x00,0x0e,0x0f,0x18,0x17,0x00,0x00,0x00,0x00,0x00,0x02,0x09,0x0f,0x11,0x0e,0x0f,0x0f,0x0f,0x0f,0x17,0x0f,0x04,0x00,0x00,0xae,0xae,0xae
,0xae,0x00,0x04,0x04,0x0f,0x0f,0x17,0x18,0x00,0x00,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x0f,0x0f,0x17,0x0f,0x04,0x00,0xb5,0x00,0xae,0xae,0xae
,0xae,0xae,0x00,0x00,0x04,0x04,0x0f,0x0f,0x17,0x18,0x00,0x02,0x08,0x0f,0x11,0x0f,0x0f,0x0f,0x17,0x0f,0x04,0x04,0x00,0xb5,0x00,0xae,0xae,0xae
,0xae,0xae,0x00,0xb5,0x00,0x00,0x04,0x04,0x0f,0x0f,0x17,0x18,0x08,0x0f,0x11,0x0f,0x0f,0x17,0x0f,0x04,0x00,0x00,0xb5,0xb5,0x00,0xae,0xae,0xae
,0xae,0xae,0xae,0x00,0xb5,0xb5,0x00,0x00,0x04,0x04,0x0f,0x0f,0x17,0x18,0x11,0x0e,0x18,0x0f,0x04,0x00,0xb5,0xb5,0xb5,0x00,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0x00,0xb5,0xb5,0xb5,0x00,0x04,0x04,0x04,0x05,0x0e,0x0f,0x18,0x17,0x0f,0x04,0x04,0x00,0xb5,0xb5,0xb5,0x00,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0x00,0x6e,0x6e,0xb5,0xb5,0x00,0x00,0x00,0x00,0x04,0x0f,0x0f,0x0f,0x04,0x00,0x00,0xb5,0xb5,0xb5,0xb5,0x00,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0xb5,0xb5,0xb5,0xb5,0x00,0x04,0x04,0x05,0x00,0xb5,0xb5,0xb5,0xb5,0xb5,0xb5,0x00,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0x6e,0x6e,0xb5,0xb5,0xb5,0x00,0x00,0x00,0xb5,0xb5,0xb5,0xb5,0xb5,0xb5,0x00,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0xb5,0xb5,0x6e,0xb5,0xb5,0xb5,0xb5,0xb5,0xb5,0xb5,0x01,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0xb5,0xb5,0xb5,0xb5,0xb5,0xb5,0xb5,0x01,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x41,0xb5,0xb5,0xb5,0xb5,0xb5,0xb5,0x00,0x0a,0x0b,0x0b,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x41,0xb5,0xb5,0xb5,0xb5,0xb5,0xb5,0x00,0x0a,0x0b,0x0b,0x0a,0x0b,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x41,0xb5,0xb5,0xb5,0xb5,0xb5,0xb5,0x00,0x0a,0x0b,0x0b,0x0a,0x0b,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x41,0xb5,0xb5,0xb5,0xb5,0xb5,0x00,0x0a,0x0b,0x0b,0x0a,0x0b,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x41,0xb5,0xb5,0xb5,0xb5,0xb5,0x00,0x0a,0x0b,0x0b,0x0a,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x41,0xb5,0xb5,0xb5,0xb5,0x00,0x0a,0x0b,0x0b,0x0a,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x6e,0x6e,0x6e,0x6e,0x41,0xb5,0xb5,0xb5,0x00,0x0a,0x0b,0x0b,0x0a,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x6e,0x6e,0x41,0xb5,0xb5,0x00,0x0a,0x0b,0x0b,0x0a,0xae,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x41,0xb5,0x00,0x0a,0x0b,0x0b,0x0a,0xae,0xae,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0x00,0x00,0x0a,0x0b,0x0a,0x0b,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae
,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae
};

/* this was extracted from a screen shoot by this code :
   (icon aligned to top left border)

	if(1)
	{
		BBitmap *map = GetBitmap("/boot/home/screen5.tga");
		if (map)
		{
			BBitmap *map8=mFilterReference.makeBitmap8Bit(map);
			if (map8)
			{
				BBitmap *map30=new BBitmap(BRect(0,0,27,34),B_COLOR_8_BIT);
				if (map30)
				{
					uchar *bit8=(uchar *)map8->Bits();
					ulong bpr8=map8->BytesPerRow();
					ulong bpr30=map30->BytesPerRow();
					FILE *f=fopen("p_trash.h","w");
					if (f && bit8 && bpr8 && bpr30)
					{
						for(long y=0; y<34; y++)
						{
							for(long x=0; x<bpr30; x++)
							{
								fprintf(f, ",0x%02x", bit8[x]);
							}
							fprintf(f, "\n");
							bit8 += bpr8;
						}
						fclose(f);
					}
				}
				else printf("no bitmap 30\n");
			}
			else printf("no bitmap 8\n");
		}
		else printf("no bitmap 32\n");
	}

*/

#endif // _H_PTRASH

